"use strict";function changeInvoiceYear(){var e=$(".invoice-year").val();$.pjax({type:"POST",url:actionCompanyInvoices,data:{year:e},container:"#company-bill-ajax",push:!1,scrollTo:!1,cache:!1})}function changePreInvoiceYear(){var e=$(".pre-invoice-year").val();$.pjax({type:"POST",url:actionCompanyPreInvoices,data:{year:e},container:"#company-bill-ajax",push:!1,scrollTo:!1,cache:!1})}function createPreInvoice(){$.pjax({type:"POST",url:actionRenderPreInvoiceCreationForm,container:"#pre-invoice-creation-pjax",push:!1,scrollTo:!1,cache:!1}).done(function(){showCreatePreInvoiceModal()})}function showCreatePreInvoiceModal(){$("#pre-invoice-creation-modal").modal("show")}function updateSubscriptions(){$.pjax({type:"POST",url:actionRenderPreInvoiceCreationForm,data:{serviceTypeId:getServiceTypeId(),user:getUser(),startDate:getStartDate()},container:"#pre-invoice-creation-pjax",push:!1,scrollTo:!1,cache:!1})}function addSubscriptionToList(){$.pjax({type:"POST",url:actionRenderPreInvoiceCreationForm,data:{serviceTypeId:getServiceTypeId(),subscription:getSubscription(),subscriptions:subscriptions,user:getUser(),startDate:getStartDate(),action:ACTION_ADD_SUBSCRIPTION_TO_LIST},container:"#pre-invoice-creation-pjax",push:!1,scrollTo:!1,cache:!1})}function removeSubscriptionFromList(e,t){e.preventDefault(),$.pjax({type:"POST",url:actionRenderPreInvoiceCreationForm,data:{serviceTypeId:getServiceTypeId(),subscription:getSubscription(),subscriptions:subscriptions,serviceToRemove:t,user:getUser(),startDate:getStartDate(),action:ACTION_REMOVE_SUBSCRIPTION_FROM_LIST},container:"#pre-invoice-creation-pjax",push:!1,scrollTo:!1,cache:!1})}function getServiceTypeId(){return $("#types").val()}function getSubscription(){return $(".subscriptions").val()}function getUser(){return $(".user").val()}function getStartDate(){return $(".start-date").val()}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
