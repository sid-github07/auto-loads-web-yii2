"use strict";function editCompanyUser(o,a){o.preventDefault(),$.pjax({type:"POST",url:actionCompanyUserEditForm,data:{id:a},container:"#edit-company-user-pjax",push:!1,scrollTo:!1,cache:!1}).done(function(){showCompanyUserEditingModal()})}function showCompanyUserEditingModal(){$("#edit-company-user-modal").modal("show")}function addCompanyUser(o,a){o.preventDefault(),$.pjax({type:"POST",url:actionCompanyUserAddForm,data:{id:a},container:"#add-company-user-pjax",push:!1,scrollTo:!1,cache:!1}).done(function(){showCompanyUserAddingModal()})}function showCompanyUserAddingModal(){$("#add-company-user-modal").modal("show")}function toggleCheckbox(o){$(o).is(":checked")?$(o).parent().addClass("checked"):$(o).parent().removeClass("checked")}function previewUserActivity(o,a){o.preventDefault(),$.pjax({type:"POST",url:actionCompanyUserActivityPreview,data:{id:a},container:"#preview-company-user-activity-pjax",push:!1,scrollTo:!1,cache:!1}).done(function(){showCompanyUserActivityPreviewModal()})}function showCompanyUserActivityPreviewModal(){$("#preview-company-user-activity-modal").modal("show")}function validateVatCode(){var o=$(".vat-code-input").val();$.post(actionValidateVatCode,{code:o},function(o){$(".validate-vat-code-button").attr("data-content",o)}).done(function(){$(".validate-vat-code-button").popover("show")})}
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsaWVudC9jb21wYW55L3VzZXIuanMiXSwibmFtZXMiOlsiZWRpdENvbXBhbnlVc2VyIiwiZSIsImlkIiwicHJldmVudERlZmF1bHQiLCIkIiwicGpheCIsInR5cGUiLCJ1cmwiLCJhY3Rpb25Db21wYW55VXNlckVkaXRGb3JtIiwiZGF0YSIsImNvbnRhaW5lciIsInB1c2giLCJzY3JvbGxUbyIsImNhY2hlIiwiZG9uZSIsInNob3dDb21wYW55VXNlckVkaXRpbmdNb2RhbCIsIm1vZGFsIiwiYWRkQ29tcGFueVVzZXIiLCJhY3Rpb25Db21wYW55VXNlckFkZEZvcm0iLCJzaG93Q29tcGFueVVzZXJBZGRpbmdNb2RhbCIsInRvZ2dsZUNoZWNrYm94Iiwic2VsZWN0b3IiLCJpcyIsInBhcmVudCIsImFkZENsYXNzIiwicmVtb3ZlQ2xhc3MiLCJwcmV2aWV3VXNlckFjdGl2aXR5IiwiYWN0aW9uQ29tcGFueVVzZXJBY3Rpdml0eVByZXZpZXciLCJzaG93Q29tcGFueVVzZXJBY3Rpdml0eVByZXZpZXdNb2RhbCIsInZhbGlkYXRlVmF0Q29kZSIsImNvZGUiLCJ2YWwiLCJwb3N0IiwiYWN0aW9uVmFsaWRhdGVWYXRDb2RlIiwicmVzcG9uc2UiLCJhdHRyIiwicG9wb3ZlciJdLCJtYXBwaW5ncyI6IkFBQUEsWUFVQSxTQUFTQSxpQkFBZ0JDLEVBQUdDLEdBQ3hCRCxFQUFFRSxpQkFDRkMsRUFBRUMsTUFDRUMsS0FBTSxPQUNOQyxJQUFLQywwQkFDTEMsTUFDSVAsR0FBSUEsR0FFUlEsVUFBVywwQkFDWEMsTUFBTSxFQUNOQyxVQUFVLEVBQ1ZDLE9BQU8sSUFDUkMsS0FBSyxXQUNKQyxnQ0FPUixRQUFTQSwrQkFDTFgsRUFBRSw0QkFBNEJZLE1BQU0sUUFTeEMsUUFBU0MsZ0JBQWVoQixFQUFHQyxHQUN2QkQsRUFBRUUsaUJBQ0ZDLEVBQUVDLE1BQ0VDLEtBQU0sT0FDTkMsSUFBS1cseUJBQ0xULE1BQ0lQLEdBQUlBLEdBRVJRLFVBQVcseUJBQ1hDLE1BQU0sRUFDTkMsVUFBVSxFQUNWQyxPQUFPLElBQ1JDLEtBQUssV0FDSkssK0JBT1IsUUFBU0EsOEJBQ0xmLEVBQUUsMkJBQTJCWSxNQUFNLFFBUXZDLFFBQVNJLGdCQUFlQyxHQUNoQmpCLEVBQUVpQixHQUFVQyxHQUFHLFlBQ2ZsQixFQUFFaUIsR0FBVUUsU0FBU0MsU0FBUyxXQUU5QnBCLEVBQUVpQixHQUFVRSxTQUFTRSxZQUFZLFdBVXpDLFFBQVNDLHFCQUFvQnpCLEVBQUdDLEdBQzVCRCxFQUFFRSxpQkFDRkMsRUFBRUMsTUFDRUMsS0FBTSxPQUNOQyxJQUFLb0IsaUNBQ0xsQixNQUNJUCxHQUFJQSxHQUVSUSxVQUFXLHNDQUNYQyxNQUFNLEVBQ05DLFVBQVUsRUFDVkMsT0FBTyxJQUNSQyxLQUFLLFdBQ0pjLHdDQU9SLFFBQVNBLHVDQUNMeEIsRUFBRSx3Q0FBd0NZLE1BQU0sUUFNcEQsUUFBU2EsbUJBQ0wsR0FBSUMsR0FBTzFCLEVBQUUsbUJBQW1CMkIsS0FDaEMzQixHQUFFNEIsS0FBS0MsdUJBQXlCSCxLQUFNQSxHQUFRLFNBQVVJLEdBQ3BEOUIsRUFBRSw2QkFBNkIrQixLQUFLLGVBQWdCRCxLQUNyRHBCLEtBQUssV0FDSlYsRUFBRSw2QkFBNkJnQyxRQUFRIiwiZmlsZSI6ImNsaWVudC9jb21wYW55L3VzZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBnbG9iYWwgYWN0aW9uQ29tcGFueVVzZXJFZGl0Rm9ybSwgYWN0aW9uQ29tcGFueVVzZXJBZGRGb3JtLCBhY3Rpb25Db21wYW55VXNlckFjdGl2aXR5UHJldmlldywgYWN0aW9uVmFsaWRhdGVWYXRDb2RlICovXHJcblxyXG4vKipcclxuICogUmVuZGVycyB1c2VyIGluZm9ybWF0aW9uIGVkaXRpbmcgZm9ybSBpbiBtb2RhbFxyXG4gKlxyXG4gKiBAcGFyYW0ge29iamVjdH0gZSBFdmVudCBvYmplY3RcclxuICogQHBhcmFtIHtudW1iZXJ9IGlkIFVzZXIgSURcclxuICovXHJcbmZ1bmN0aW9uIGVkaXRDb21wYW55VXNlcihlLCBpZCkge1xyXG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgJC5wamF4KHtcclxuICAgICAgICB0eXBlOiAnUE9TVCcsXHJcbiAgICAgICAgdXJsOiBhY3Rpb25Db21wYW55VXNlckVkaXRGb3JtLFxyXG4gICAgICAgIGRhdGE6IHtcclxuICAgICAgICAgICAgaWQ6IGlkXHJcbiAgICAgICAgfSxcclxuICAgICAgICBjb250YWluZXI6ICcjZWRpdC1jb21wYW55LXVzZXItcGpheCcsXHJcbiAgICAgICAgcHVzaDogZmFsc2UsXHJcbiAgICAgICAgc2Nyb2xsVG86IGZhbHNlLFxyXG4gICAgICAgIGNhY2hlOiBmYWxzZVxyXG4gICAgfSkuZG9uZShmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgc2hvd0NvbXBhbnlVc2VyRWRpdGluZ01vZGFsKCk7XHJcbiAgICB9KTtcclxufVxyXG5cclxuLyoqXHJcbiAqIFNob3dzIHVzZXIgZWRpdGluZyBtb2RhbFxyXG4gKi9cclxuZnVuY3Rpb24gc2hvd0NvbXBhbnlVc2VyRWRpdGluZ01vZGFsKCkge1xyXG4gICAgJCgnI2VkaXQtY29tcGFueS11c2VyLW1vZGFsJykubW9kYWwoJ3Nob3cnKTtcclxufVxyXG5cclxuLyoqXHJcbiAqIFJlbmRlcnMgY29tcGFueSB1c2VyIGFkZGluZyBmb3JtIGluIG1vZGFsXHJcbiAqXHJcbiAqIEBwYXJhbSB7b2JqZWN0fSBlIEV2ZW50IG9iamVjdFxyXG4gKiBAcGFyYW0ge251bWJlcn0gaWQgQ29tcGFueSBJRFxyXG4gKi9cclxuZnVuY3Rpb24gYWRkQ29tcGFueVVzZXIoZSwgaWQpIHtcclxuICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICQucGpheCh7XHJcbiAgICAgICAgdHlwZTogJ1BPU1QnLFxyXG4gICAgICAgIHVybDogYWN0aW9uQ29tcGFueVVzZXJBZGRGb3JtLFxyXG4gICAgICAgIGRhdGE6IHtcclxuICAgICAgICAgICAgaWQ6IGlkXHJcbiAgICAgICAgfSxcclxuICAgICAgICBjb250YWluZXI6ICcjYWRkLWNvbXBhbnktdXNlci1wamF4JyxcclxuICAgICAgICBwdXNoOiBmYWxzZSxcclxuICAgICAgICBzY3JvbGxUbzogZmFsc2UsXHJcbiAgICAgICAgY2FjaGU6IGZhbHNlXHJcbiAgICB9KS5kb25lKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBzaG93Q29tcGFueVVzZXJBZGRpbmdNb2RhbCgpO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBTaG93cyBjb21wYW55IHVzZXIgYWRkaW5nIG1vZGFsXHJcbiAqL1xyXG5mdW5jdGlvbiBzaG93Q29tcGFueVVzZXJBZGRpbmdNb2RhbCgpIHtcclxuICAgICQoJyNhZGQtY29tcGFueS11c2VyLW1vZGFsJykubW9kYWwoJ3Nob3cnKTtcclxufVxyXG5cclxuLyoqXHJcbiAqIFRvZ2dsZXMgY2hlY2tib3ggZWxlbWVudFxyXG4gKlxyXG4gKiBAcGFyYW0ge29iamVjdH0gc2VsZWN0b3IgVGhpcyBvYmplY3RcclxuICovXHJcbmZ1bmN0aW9uIHRvZ2dsZUNoZWNrYm94KHNlbGVjdG9yKSB7XHJcbiAgICBpZiAoJChzZWxlY3RvcikuaXMoJzpjaGVja2VkJykpIHtcclxuICAgICAgICAkKHNlbGVjdG9yKS5wYXJlbnQoKS5hZGRDbGFzcygnY2hlY2tlZCcpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICAkKHNlbGVjdG9yKS5wYXJlbnQoKS5yZW1vdmVDbGFzcygnY2hlY2tlZCcpO1xyXG4gICAgfVxyXG59XHJcblxyXG4vKipcclxuICogUmVuZGVycyBjb21wYW55IHVzZXIgYWN0aXZpdHkgcHJldmlldyBtb2RhbFxyXG4gKlxyXG4gKiBAcGFyYW0ge29iamVjdH0gZSBFdmVudCBvYmplY3RcclxuICogQHBhcmFtIHtudW1iZXJ9IGlkIFVzZXIgSURcclxuICovXHJcbmZ1bmN0aW9uIHByZXZpZXdVc2VyQWN0aXZpdHkoZSwgaWQpIHtcclxuICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICQucGpheCh7XHJcbiAgICAgICAgdHlwZTogJ1BPU1QnLFxyXG4gICAgICAgIHVybDogYWN0aW9uQ29tcGFueVVzZXJBY3Rpdml0eVByZXZpZXcsXHJcbiAgICAgICAgZGF0YToge1xyXG4gICAgICAgICAgICBpZDogaWRcclxuICAgICAgICB9LFxyXG4gICAgICAgIGNvbnRhaW5lcjogJyNwcmV2aWV3LWNvbXBhbnktdXNlci1hY3Rpdml0eS1wamF4JyxcclxuICAgICAgICBwdXNoOiBmYWxzZSxcclxuICAgICAgICBzY3JvbGxUbzogZmFsc2UsXHJcbiAgICAgICAgY2FjaGU6IGZhbHNlXHJcbiAgICB9KS5kb25lKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBzaG93Q29tcGFueVVzZXJBY3Rpdml0eVByZXZpZXdNb2RhbCgpO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBTaG93cyBjb21wYW55IHVzZXIgYWN0aXZpdHkgcHJldmlldyBtb2RhbFxyXG4gKi9cclxuZnVuY3Rpb24gc2hvd0NvbXBhbnlVc2VyQWN0aXZpdHlQcmV2aWV3TW9kYWwoKSB7XHJcbiAgICAkKCcjcHJldmlldy1jb21wYW55LXVzZXItYWN0aXZpdHktbW9kYWwnKS5tb2RhbCgnc2hvdycpO1xyXG59XHJcblxyXG4vKipcclxuICogVmFsaWRhdGVzIGNvbXBhbnkgVkFUIGNvZGVcclxuICovXHJcbmZ1bmN0aW9uIHZhbGlkYXRlVmF0Q29kZSgpIHtcclxuICAgIHZhciBjb2RlID0gJCgnLnZhdC1jb2RlLWlucHV0JykudmFsKCk7XHJcbiAgICAkLnBvc3QoYWN0aW9uVmFsaWRhdGVWYXRDb2RlLCB7Y29kZTogY29kZX0sIGZ1bmN0aW9uIChyZXNwb25zZSkge1xyXG4gICAgICAgICQoJy52YWxpZGF0ZS12YXQtY29kZS1idXR0b24nKS5hdHRyKCdkYXRhLWNvbnRlbnQnLCByZXNwb25zZSk7XHJcbiAgICB9KS5kb25lKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAkKCcudmFsaWRhdGUtdmF0LWNvZGUtYnV0dG9uJykucG9wb3Zlcignc2hvdycpO1xyXG4gICAgfSk7XHJcbn0iXX0=
