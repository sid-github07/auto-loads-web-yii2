"use strict";function hideSubscriptionAlert(e,t){e.preventDefault(),!0!==t?$.post(actionDisableSubscriptionAlert,{},function(){$(e.target).parent(".subscription-reminder").fadeOut()}):$(e.target).parent(".subscription-reminder").fadeOut()}function hideAnnouncementAlert(e){e.preventDefault(),$.post(actionDisableAnnouncementAlert,{},function(){$(".announcement").fadeOut()})}function checkedCheckbox(){$(".custom-checkbox > input").each(function(){$(this).is(":checked")?$(this).parent().addClass("checked"):$(this).parent().removeClass("checked")})}function getUserTimezone(){return jstz.determine().name()}function setUserTimezone(e){$.post(actionSetTimezone,{name:e})}function showReportBugModal(){$("#bug-report-modal").modal("show")}function createCookie(e,t,o){document.cookie=e+"="+t+";expires="+o+";path=/"}function getCookie(e){for(var t=e+"=",o=decodeURIComponent(document.cookie),n=o.split(";"),s=0;s<n.length;s++){for(var i=n[s];" "==i.charAt(0);)i=i.substring(1);if(0==i.indexOf(t))return i.substring(t.length,i.length)}return""}function showWhatsNewModal(){""===getCookie("whats-new-message")&&$("#whats-new-modal").modal("show")}function showWhatsNewInDemoModal(){null===sessionStorage.getItem("whats-new-in-demo-message")&&$("#whats-new-in-demo-modal").modal("show")}function hideWhatsNewModal(){$("#whats-new-modal").on("hidden.bs.modal",function(){var e=new Date;e.setTime(e.getTime()+2592e6),createCookie("whats-new-message",1,e.toUTCString())})}function hideWhatsNewInDemoModal(){$("#whats-new-in-demo-modal").on("hidden.bs.modal",function(){sessionStorage.setItem("whats-new-in-demo-message","true")})}function dismissModal(){var e=new Date;e.setTime(e.getTime()+2592e6),createCookie("whats-new-message",1,e.toUTCString())}function dismissWhatsNewInDemoModal(){sessionStorage.setItem("whats-new-in-demo-message","true")}function clearSessionStorage(){sessionStorage.clear()}$(document).ready(function(){if($(".report-bug-sidebar-btn, .report-bug-btn").click(function(e){e.preventDefault(),showReportBugModal()}),""===timezone){setUserTimezone(getUserTimezone())}$('[data-toggle="popover"]').popover({trigger:"hover"}),$('[data-toggle="tooltip"]').tooltip({trigger:"hover"}),$("#sidebar-toggle").click(function(e){e.preventDefault(),e.stopPropagation(),$("#sidebar").addClass("toggled"),$("#menu").removeClass("in"),$(".toggle-topbar").addClass("collapsed")}),$("#close-sidebar, .report-bug-sidebar-btn").click(function(e){e.preventDefault(),$("#sidebar").removeClass("toggled")}),$(window).resize(function(){$(this).width()>1002&&$("#sidebar").removeClass("toggled")}),$(".toggle-topbar").click(function(e){e.preventDefault(),$("#sidebar").removeClass("toggled")}),checkedCheckbox(),$(".custom-checkbox > input").click(function(){$(this).is(":checked")?$(this).parent().addClass("checked"):$(this).parent().removeClass("checked")}),$(window).on("beforeunload",function(){$(".page-loader").fadeIn("fast")}),$(window).load(function(){$(".page-loader").fadeOut("slow")})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
