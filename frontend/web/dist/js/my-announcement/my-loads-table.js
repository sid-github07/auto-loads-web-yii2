"use strict";function changeLoadDate(a){$("#MK-C-15_"+a).change(function(){var e=$(this).val();$.pjax({type:"POST",url:appendUrlParams(actionChangeLoadDate),data:{id:a,date:e},container:"#my-loads-table-pjax",push:!1,replace:!1,scrollTo:!1}).done(function(){$.pjax.reload({container:"#toastr-pjax"})})})}function renderLoadEditingForm(a,e){a.preventDefault(),$("#load-announcement-form").html(""),$.pjax({type:"POST",url:appendUrlParams(actionLoadEditingForm),data:{id:e},container:"#edit-load-pjax",push:!1,replace:!1,scrollTo:!1}).done(function(){$("#edit-load-modal").modal("show"),$(".load_cars_editing_container").on("afterInsert",function(){toggleRemoveButtonsVisibility(),toggleRequiredClass(),togglePriceVisibility(),toggleQuantityVisibility(),validateQuantity(),toggleEditableLoadElementsStructure()}).on("afterDelete",function(){toggleRemoveButtonsVisibility(),toggleQuantityVisibility(),validateQuantity(),toggleEditableLoadElementsStructure()})})}function renderAdvertizeForm(a,e){a.preventDefault(),$.pjax({type:"POST",url:appendUrlParams(actionLoadAdvForm),data:{id:e},container:"#adv-load-modal-pjax",push:!1,replace:!1,scrollTo:!1}).done(function(){$("#adv-load-modal").modal("show")})}function renderLoadOpenContactsForm(a,e){a.preventDefault(),$.pjax({type:"POST",url:appendUrlParams(actionLoadOpenContactsForm),data:{id:e},container:"#load-open-contacts-modal-pjax",push:!1,replace:!1,scrollTo:!1}).done(function(){$("#load-open-contacts-modal").modal("show")})}function getUserContacts(a,e,o,t){if(console.log(1),a.preventDefault(),1!==processed[e+o+t]){processed[e+o+t]=1;var n=$("#"+e),i=$("#alert-"+e);if(n.length){var r=n.find("tr[data-user="+t+"]"),l=n.find("tr[data-user-contacts="+t+"]");if(l.length){var d=l.children("td");d.contents().length?(processed[e+o+t]=0,l.toggle()):$.post("/my-load/"+e,{loadId:o,userId:t,action:"get-contacts"},function(a){void 0!==a.error&&null!==a.error&&(d.html(a.error),l.show()),void 0!==a.alert&&void 0!==a.content&&void 0!==a.params&&(r.find("td.viewed").text(a.params.viewed),r.find("td.marker").text(""),processed[e+o+t]=0,d.html(a.content),i.length&&i.html(a.alert),r.css("background-color","#fff"),l.show())})}}}}function renderPreviewForm(a,e){a.preventDefault(),$.pjax({type:"POST",url:appendUrlParams(actionPreviewLoad),data:{loadId:e},container:"#load-preview-modal-pjax",push:!1,replace:!1,scrollTo:!1}).done(function(){$("#load-preview-modal").modal("show")})}function renderCustomLoadForm(a,e,o){$.pjax({type:"POST",url:appendUrlParams(e),data:{loadId:a},container:"#"+o+"-pjax",push:!1,replace:!1,scrollTo:!1}).done(function(){$("#"+o).modal("show")})}function makeLoadsVisible(a,e){if(a.preventDefault(),null==e&&(e=$("#my-loads-grid-view").yiiGridView("getSelectedRows")),$.isNumeric(e)||!$.isEmptyObject(e))return changeLoadsVisibility(e,ACTIVATED)}function makeLoadsInvisible(a,e){if(a.preventDefault(),null==e&&(e=$("#my-loads-grid-view").yiiGridView("getSelectedRows")),$.isNumeric(e)||!$.isEmptyObject(e))return changeLoadsVisibility(e,NOT_ACTIVATED)}function changeLoadsTypeShowing(a){updateUrlParam("load-activity",a),updateUrlParam("load-page",1),$.pjax({type:"POST",url:appendUrlParams(actionChangeLoadTableFiltration),container:"#my-loads-table-pjax",push:!1,replace:!1,scrollTo:!1}).done(function(){$.pjax.reload({container:"#toastr-pjax"})})}function changeLoadsVisibility(a,e){$.pjax({type:"POST",url:appendUrlParams(actionChangeLoadsVisibility),data:{id:a,newStatus:e},container:"#my-loads-table-pjax",push:!1,replace:!1,scrollTo:!1}).done(function(){$.pjax.reload({container:"#toastr-pjax"})})}function removeLoads(a,e){a.preventDefault(),null==e&&(e=$("#my-loads-grid-view").yiiGridView("getSelectedRows")),!$.isNumeric(e)&&$.isEmptyObject(e)||($("#remove-load-button-yes").unbind("click").bind("click",function(){$.pjax({type:"POST",url:appendUrlParams(actionRemoveLoads),data:{id:e},container:"#my-loads-table-pjax",push:!1,replace:!1,scrollTo:!1}).done(function(){$("#remove-load-modal").modal("hide"),$.pjax.reload({container:"#toastr-pjax"})})}),$("#remove-load-modal").modal("show"))}function changeLoadPageSize(a){var e=$(a).val();updateUrlParam("load-page",1),updateUrlParam("load-per-page",e),$.pjax({type:"POST",url:appendUrlParams(actionChangeLoadsPageSize),container:"#my-loads-table-pjax",push:!1,replace:!1,scrollTo:!1}).done(function(){$("."+$(a).attr("class")).val(e)})}$(document).on("pjax:success",function(){$('[data-toggle="tooltip"]').tooltip({trigger:"hover"})});var processed={};$(document).click(function(a){$(a.target).is(".simple-dropdown")||$(a.target).parents(".simple-dropdown").length?$(a.target).parents(".simple-dropdown").find("ul").toggle():$(".simple-dropdown").find("ul").hide()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
