"use strict";function registerLoadDirectionChange(){$("#IK-C-10").unbind("change.direction").bind("change.direction",function(){loadDirectionChange()})}function loadDirectionChange(){var t,n,i=$("#IK-C-10").val();if(isMultipleCities(i))$.each(i,function(i,e){if(isDirection(e)){var o=splitDirection(e),r=_slicedToArray(o,2);t=r[0],n=r[1],updateCities(e,t,"load"),updateCities(e,n,"unload")}});else{if(!isDirection(i))return;var e=splitDirection(i),o=_slicedToArray(e,2);t=o[0],n=o[1],updateCity(t,"load"),updateCity(n,"unload")}}function isMultipleCities(t){return"object"==(void 0===t?"undefined":_typeof(t))}function updateCities(t,n,i){var e="load"===i?"#IK-C-10":"#IK-C-11",o=$(e).val(),r=null===o?[]:o;removeDirectionOption(e,t),appendCities(e,n),supplementCities(e,n,r)}function removeDirectionOption(t,n){$(t).find('option[value="'+n+'"]').remove()}function appendCities(t,n){0==$(t).find('option[value="'+n+'"]').length&&$(t).append($("<option></option>").attr("value",n))}function supplementCities(t,n,i){i.push(n),$(t).val(i).change()}function updateCity(t,n){var i="load"===n?"#IK-C-10":"#IK-C-11";$(i).append($("<option></option>").attr("value",t)).val(t).change()}function isDirection(t){return t.indexOf("-")>=0}function splitDirection(t){return[t.split("-")[0],t.split("-")[1]]}var _typeof2="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},_typeof="function"==typeof Symbol&&"symbol"===_typeof2(Symbol.iterator)?function(t){return void 0===t?"undefined":_typeof2(t)}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":void 0===t?"undefined":_typeof2(t)},_slicedToArray=function(){function t(t,n){var i=[],e=!0,o=!1,r=void 0;try{for(var u,a=t[Symbol.iterator]();!(e=(u=a.next()).done)&&(i.push(u.value),!n||i.length!==n);e=!0);}catch(t){o=!0,r=t}finally{try{!e&&a.return&&a.return()}finally{if(o)throw r}}return i}return function(n,i){if(Array.isArray(n))return n;if(Symbol.iterator in Object(n))return t(n,i);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}();$(document).ready(function(){registerLoadDirectionChange()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
