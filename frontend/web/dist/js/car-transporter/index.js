"use strict";function logOpenMapAction(){$.post(actionLogTransporterMapOpen,{})}function changeMapCollapseButtonText(e,n){if(n.preventDefault(),mapOpen)var a='<i class="fa fa-plus-circle btn-icon map-link"></i> <span class="btn-text map-link">'+TEXT_SHOW_MAP+"</span>";else var a='<i class="fa fa-minus-circle margin-right-5 btn-icon"></i><span class="btn-text color-black">'+TEXT_HIDE_MAP+"</span>";$(e).siblings().each(function(e,n){n.remove()}),$(e).parent().append(a),!1===mapRendered&&renderMapAjax(),mapOpen=!mapOpen}function changeFiltersCollapseButtonText(e,n){if(n.preventDefault(),filtersOpen)var a='<i class="fa fa-plus-circle btn-icon margin-right-5"></i><span class="btn-text">'+TEXT_SHOW_FILTERS+"</span>";else var a='<i class="fa fa-minus-circle margin-right-5 btn-icon"></i><span class="btn-text color-black">'+TEXT_HIDE_FILTERS+"</span>";$(e).siblings().each(function(e,n){n.remove()}),$(e).parent().append(a),!1===filtersRendered&&renderFiltersAjax(),filtersOpen=!filtersOpen}function filterByUnloadCity(e){var n=$(e).val(),a=window.location.pathname,t=replaceQueryParam("unloadCityId",n,window.location.search);window.history.pushState(null,"",a+t),location.reload()}function replaceQueryParam(e,n,a){var t=new RegExp("([?;&])"+e+"[^&;]*[;&]?"),r=a.replace(t,"$1").replace(/&$/,"");return""===n?r:(r.length>2?r+"&":"?")+(n?e+"="+n:"")}function changePageSize(e){var n=$(e).val(),a=window.location.pathname,t=replaceQueryParam("pageSize",n,window.location.search);window.history.pushState(null,"",a+t),location.reload()}function previewContactInfo(e,n){e.preventDefault(),isFullScreen&&$('#map_canvas div.gm-style button[title="Toggle fullscreen view"]').trigger("click"),$.pjax({type:"POST",url:actionPreview,data:{id:n,showInfo:!0},container:"#contact-info-preview-pjax",push:!1,replace:!1,scrollTo:!1}).done(function(){showContactInfoPreviewModal()})}function showContactInfoPreviewModal(){$("#contact-info-preview-modal").modal("show")}function collapseCarTransporterPreview(e,n){e.preventDefault();var a=$("#car-transporter-preview-"+n),t=a.find(".content"),r=a.parent();0===t.text().length?$.post(actionPreview,{id:n,showInfo:!1},function(e){t.html(e),r.hasClass("hidden")?r.removeClass("hidden"):r.addClass("hidden")}):r.hasClass("hidden")?r.removeClass("hidden"):r.addClass("hidden")}function refreshCarTransporterPreview(e,n){e.preventDefault();var a=$("#car-transporter-preview-"+n);$.ajax({type:"POST",url:$("#car-transporter-creditcode-form").attr("action"),data:$("#car-transporter-creditcode-form").serialize(),dataType:"html",success:function(e){$.ajax({type:"GET",url:"car-transporter/get-msgs-creditcode-state",dataType:"json",success:function(n){if(""!=n.type){var t={closeButton:!0,debug:!1,newestOnTop:!0,progressBar:!1,positionClass:"toast-top-center",preventDuplicates:!0,showDuration:0,hideDuration:1e3,timeOut:45e3,extendedTimeOut:8e3,onShown:function(){$(".alert-container").append($("#toast-container"))}};switch(n.type){case"error":toastr.error(n.message,"",t);break;case"success":toastr.success(n.message,"",t)}}a.html(e)}})}})}function showCarTransporterLink(e,n){e.preventDefault(),$.pjax({type:"POST",url:actionPreviewLink,data:{id:n},container:"#car-transporter-link-preview-pjax",push:!1,replace:!1,scrollTo:!1}).done(function(){$("#car-transporter-link-preview-modal").modal("show")})}function copyCarTransporterLinkToClipboard(){$("#car-transporter-link-field").select(),document.execCommand("Copy")&&($("#car-transporter-link-success-alert").fadeIn("slow",function(){$(this).removeClass("hidden")}),setTimeout(function(){$("#car-transporter-link-success-alert").fadeOut("slow",function(){$(this).addClass("hidden")})},5e3))}function renderMapAjax(){$.pjax({type:"POST",url:actionRenderMap+window.location.search,container:"#C-T-3",cache:!1,async:!0,push:!1}).done(function(){mapRendered=!0,loadScript()})}function renderFiltersAjax(e){$.pjax({type:"POST",url:actionRenderFilters+window.location.search,container:"#filter",cache:!1,async:!0,push:!1}).done(function(){filtersRendered=!0})}function renderLoadContactMapAjax(e,n){var a=$(e).data("transporter");$.ajax({method:"POST",url:actionRenderContactMap,data:{transporter:a},contentType:"application/x-www-form-urlencoded; charset=UTF-8",success:function(a){n.html(a),$(e).data("rendered",!0),$(e).data("map-open",!0)}})}var isFullScreen=!1,mapRendered=!1,filtersRendered=!1,mapOpen=!1,filtersOpen=!1;$(document).bind("webkitfullscreenchange mozfullscreenchange fullscreenchange",function(){isFullScreen=document.fullScreen||document.mozFullScreen||document.webkitIsFullScreen}),$(document).ready(function(e){e("body").on("click",".map-link",function(e){logOpenMapAction()}),e("body").on("click",".btn-text",function(n){e(this).parent().find("input[type='button']").trigger("click")}),e("body").on("click",".btn-icon",function(n){e(this).parent().find("input[type='button']").trigger("click")}),e("body").on("click",".map-button",function(n){var a=e(this),t=a.find(".btn-text"),r=a.find(".btn-icon"),o=a.parent().find(".map-container"),i=e(this).data("rendered"),c=e(this).data("map-open");!1===i&&(renderLoadContactMapAjax(this,o),t.html(closeMapText),r.removeClass("fa-plus-circle").addClass("fa-minus-circle")),!0===c&&!0===i?(t.html(openMapText),o.fadeOut(),a.data("map-open",!1),r.removeClass("fa-minus-circle").addClass("fa-plus-circle")):!1===c&&!0===i&&(t.html(closeMapText),o.fadeIn(),a.data("map-open",!0),r.removeClass("fa-plus-circle").addClass("fa-minus-circle"))}),!0===needToOpenFilters&&e("#filter-btn").click()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
